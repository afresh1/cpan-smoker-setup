#!/usr/bin/env perl
use strict;
use warnings;

use File::Copy  qw< copy >;
use File::Path  qw< make_path >;
use Sys::Syslog qw< :standard :macros >;;

$ENV{PLENV_VERSION} ||= 'system';
my $name = "Smoke CPAN on $^V ($ENV{PLENV_VERSION})";

BEGIN {
	use CPAN::HandleConfig;

	sub set_syslog_colorize {
		$CPAN::Config->{colorize_print} = LOG_INFO;
		$CPAN::Config->{colorize_warn}  = LOG_WARNING;
		$CPAN::Config->{colorize_debug} = LOG_DEBUG;
	}

	# apparently we reload the config from disk sometimes,
	# overriding the values we actually want for these,
	# so put them back.
	{
		my $_try_loading = \&CPAN::HandleConfig::_try_loading;
		no warnings 'redefine';
		*CPAN::HandleConfig::_try_loading = sub {
			my $ret = $_try_loading->(@_);
			set_syslog_colorize();
			return $ret;
		};
		use warnings 'redefine';
	}

	# We want to duplicate messages to syslog
	# we overrode the "colorize" above to be syslog levels
	# so now we turn of colorizing and send to syslog.
	package My::CPAN::Shell {
		$INC{'My/CPAN/Shell.pm'} = 1;
		our $VERSION = v999.0.0_0;
		use parent 'CPAN::Shell';

		sub colorize_output { 0 }

		sub print_ornamented {
			my ($self, $what, $level) = @_;
			Sys::Syslog::syslog($level, $what);
			$self->SUPER::print_ornamented($what);
		}
	}

	# We want to set the proc title, not the term title
	package Term::Title {
		$INC{'Term/Title.pm'} = 1;
		our $VERSION = v999.0.0_0;
		sub set_titlebar {
			my ($msg) = @_;
			$msg =~ s/^Smoking\s+//;
			$0 = "$name: $msg";
			print "\033]2;$name: $msg\007";
		}
	}
}

use CPAN::Reporter::Smoker qw< start >;

Term::Title::set_titlebar("Starting");
$CPAN::Frontend = 'My::CPAN::Shell';
set_syslog_colorize;

# o   "PERL_CPAN_REPORTER_DIR" -- if set, this directory is used in place
#     of the default ".cpanreporter" directory; this will affect not only
#     the location of the default "config.ini", but also the location of
#     the CPAN::Reporter::History database and any other files that live in
#     that directory
#
# o   "PERL_CPAN_REPORTER_CONFIG" -- if set, this file is used in place of
#     the default "config.ini" file; it may be in any directory, regardless
#     of the choice of configuration directory

my $reporter_root = $ENV{PERL_CPAN_REPORTER_DIR} || "$ENV{HOME}/.cpanreporter";
my $reporter_dir  = $ENV{PERL_CPAN_REPORTER_DIR}
                  = "$reporter_root/$ENV{PLENV_VERSION}";

make_path($reporter_dir) unless -d $reporter_dir;

$ENV{PERL_CPAN_REPORTER_CONFIG} = "$reporter_root/config.ini";

if ( -e "$reporter_root/metabase_id.json" ) {
	my $root_mtime = ( stat _ )[9];
	my $dir_mtime  = ( stat "$reporter_dir/metabase_id.json" )[9] || 0;
	if ($root_mtime > $dir_mtime) {
		copy "$reporter_root/metabase_id.json",
		     "$reporter_dir/metabase_id.json"
		     or die "Unable to copy metabase_id.json: $!";
	}
}

openlog($name, 'pid', LOG_LOCAL1);
END { closelog() }

# Set up local::lib install path
my $local_lib_root = "$ENV{HOME}/perl/$ENV{PLENV_VERSION}";
$ENV{PERL_LOCAL_LIB_ROOT} = $local_lib_root;

$ENV{PATH}        = "$local_lib_root/bin:$ENV{PATH}";
$ENV{PERL_MB_OPT} = "--install_base '$local_lib_root'";
$ENV{PERL_MM_OPT} = "INSTALL_BASE=$local_lib_root";
$ENV{PERL5LIB}    = "$local_lib_root/lib/perl5"
                    . ( $ENV{PERL5LIB} ? ":$ENV{PERL5LIB}" : "" );

$0 = $name;
start( install => 1 );
